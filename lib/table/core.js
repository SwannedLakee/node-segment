"use strict";
/**
 * Created by user on 2018/4/19/019.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AbstractTableDictCore = void 0;
class AbstractTableDictCore {
    constructor(type, options = {}, existsTable, ...argv) {
        this.TABLE = {};
        this.TABLE2 = {};
        this.type = type;
        this.options = Object.assign({}, this.options, options);
        if (existsTable) {
            if (existsTable.TABLE) {
                this.TABLE = existsTable.TABLE;
            }
            if (existsTable.TABLE2) {
                this.TABLE2 = existsTable.TABLE2;
            }
        }
    }
    _exists(data, ...argv) {
        let w, p, f;
        if (typeof data == 'string') {
            w = data;
        }
        else if (Array.isArray(data)) {
            [w, p, f] = data;
        }
        else {
            ({ w, p, f } = data);
        }
        return w;
    }
    exists(data, ...argv) {
        let w = this._exists(data);
        return this.TABLE[w] || null;
    }
    size() {
        return Object.keys(this.TABLE).length;
    }
}
exports.AbstractTableDictCore = AbstractTableDictCore;
exports.default = AbstractTableDictCore;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29yZS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImNvcmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOztHQUVHOzs7QUE0QkgsTUFBc0IscUJBQXFCO0lBVTFDLFlBQVksSUFBWSxFQUFFLFVBQW9CLEVBQUUsRUFBRSxXQUFzQyxFQUFFLEdBQUcsSUFBSTtRQUwxRixVQUFLLEdBQWEsRUFBRSxDQUFDO1FBQ3JCLFdBQU0sR0FBb0IsRUFBRSxDQUFDO1FBTW5DLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBRWpCLElBQUksQ0FBQyxPQUFPLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsSUFBSSxDQUFDLE9BQU8sRUFBRSxPQUFPLENBQUMsQ0FBQztRQUV4RCxJQUFJLFdBQVcsRUFDZjtZQUNDLElBQUksV0FBVyxDQUFDLEtBQUssRUFDckI7Z0JBQ0MsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFXLENBQUMsS0FBSyxDQUFDO2FBQy9CO1lBRUQsSUFBSSxXQUFXLENBQUMsTUFBTSxFQUN0QjtnQkFDQyxJQUFJLENBQUMsTUFBTSxHQUFHLFdBQVcsQ0FBQyxNQUFNLENBQUM7YUFDakM7U0FDRDtJQUNGLENBQUM7SUFFUyxPQUFPLENBQXNDLElBQU8sRUFBRSxHQUFHLElBQUk7UUFFdEUsSUFBSSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVaLElBQUksT0FBTyxJQUFJLElBQUksUUFBUSxFQUMzQjtZQUNDLENBQUMsR0FBRyxJQUFJLENBQUM7U0FDVDthQUNJLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFDNUI7WUFDQyxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDO1NBQ2pCO2FBRUQ7WUFDQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxJQUFhLENBQUMsQ0FBQztTQUM5QjtRQUVELE9BQU8sQ0FBQyxDQUFBO0lBQ1QsQ0FBQztJQUVNLE1BQU0sQ0FBc0MsSUFBTyxFQUFFLEdBQUcsSUFBSTtRQUVsRSxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFDO1FBRTNCLE9BQU8sSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxJQUFJLENBQUM7SUFDOUIsQ0FBQztJQVlNLElBQUk7UUFFVixPQUFPLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLE1BQU0sQ0FBQztJQUN2QyxDQUFDO0NBQ0Q7QUF2RUQsc0RBdUVDO0FBRUQsa0JBQWUscUJBQXFCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE4LzQvMTkvMDE5LlxuICovXG5cbmltcG9ydCB7IElXb3JkIH0gZnJvbSAnLi4vc2VnbWVudC90eXBlcyc7XG5pbXBvcnQgeyBJRGljdFJvdyB9IGZyb20gJ3NlZ21lbnQtZGljdC9saWIvbG9hZGVyL3NlZ21lbnQnO1xuaW1wb3J0IENqa0NvbnYgZnJvbSAnY2prLWNvbnYnO1xuaW1wb3J0IHsgdGV4dF9saXN0IH0gZnJvbSAnLi4vdXRpbC9jamsnO1xuaW1wb3J0IHsgSVRhYmxlRGljdFJvdyB9IGZyb20gJy4vZGljdCc7XG5cbmV4cG9ydCB0eXBlIElPcHRpb25zID0ge1xuXHRhdXRvQ2prPzogYm9vbGVhbixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJRElDVDxUID0gYW55Plxue1xuXHRba2V5OiBzdHJpbmddOiBULFxufVxuXG5leHBvcnQgaW50ZXJmYWNlIElESUNUMjxUID0gYW55Plxue1xuXHRba2V5OiBudW1iZXJdOiBJRElDVDxUPixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBJVGFibGVEaWN0RXhpc3RzVGFibGU8VD5cbntcblx0VEFCTEU/OiBJRElDVDxUPixcblx0VEFCTEUyPzogYW55IHwgSURJQ1QyPFQ+LFxufVxuXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgQWJzdHJhY3RUYWJsZURpY3RDb3JlPFQ+XG57XG5cdHB1YmxpYyBzdGF0aWMgdHlwZTogc3RyaW5nO1xuXHRwdWJsaWMgdHlwZTogc3RyaW5nO1xuXG5cdHB1YmxpYyBUQUJMRTogSURJQ1Q8VD4gPSB7fTtcblx0cHVibGljIFRBQkxFMjogYW55IHwgSURJQ1QyPFQ+ID0ge307XG5cblx0cHVibGljIG9wdGlvbnM6IElPcHRpb25zO1xuXG5cdGNvbnN0cnVjdG9yKHR5cGU6IHN0cmluZywgb3B0aW9uczogSU9wdGlvbnMgPSB7fSwgZXhpc3RzVGFibGU/OiBJVGFibGVEaWN0RXhpc3RzVGFibGU8VD4sIC4uLmFyZ3YpXG5cdHtcblx0XHR0aGlzLnR5cGUgPSB0eXBlO1xuXG5cdFx0dGhpcy5vcHRpb25zID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5vcHRpb25zLCBvcHRpb25zKTtcblxuXHRcdGlmIChleGlzdHNUYWJsZSlcblx0XHR7XG5cdFx0XHRpZiAoZXhpc3RzVGFibGUuVEFCTEUpXG5cdFx0XHR7XG5cdFx0XHRcdHRoaXMuVEFCTEUgPSBleGlzdHNUYWJsZS5UQUJMRTtcblx0XHRcdH1cblxuXHRcdFx0aWYgKGV4aXN0c1RhYmxlLlRBQkxFMilcblx0XHRcdHtcblx0XHRcdFx0dGhpcy5UQUJMRTIgPSBleGlzdHNUYWJsZS5UQUJMRTI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cHJvdGVjdGVkIF9leGlzdHM8VSBleHRlbmRzIElXb3JkIHwgSURpY3RSb3cgfCBzdHJpbmc+KGRhdGE6IFUsIC4uLmFyZ3YpXG5cdHtcblx0XHRsZXQgdywgcCwgZjtcblxuXHRcdGlmICh0eXBlb2YgZGF0YSA9PSAnc3RyaW5nJylcblx0XHR7XG5cdFx0XHR3ID0gZGF0YTtcblx0XHR9XG5cdFx0ZWxzZSBpZiAoQXJyYXkuaXNBcnJheShkYXRhKSlcblx0XHR7XG5cdFx0XHRbdywgcCwgZl0gPSBkYXRhO1xuXHRcdH1cblx0XHRlbHNlXG5cdFx0e1xuXHRcdFx0KHsgdywgcCwgZiB9ID0gZGF0YSBhcyBJV29yZCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHdcblx0fVxuXG5cdHB1YmxpYyBleGlzdHM8VSBleHRlbmRzIElXb3JkIHwgSURpY3RSb3cgfCBzdHJpbmc+KGRhdGE6IFUsIC4uLmFyZ3YpXG5cdHtcblx0XHRsZXQgdyA9IHRoaXMuX2V4aXN0cyhkYXRhKTtcblxuXHRcdHJldHVybiB0aGlzLlRBQkxFW3ddIHx8IG51bGw7XG5cdH1cblxuXHRwdWJsaWMgYWJzdHJhY3QgYWRkKGRhdGEsIC4uLmFyZ3YpOiB0aGlzXG5cblx0cHJvdGVjdGVkIGFic3RyYWN0IF9hZGQoZGF0YSwgLi4uYXJndilcblxuXHRwdWJsaWMgcmVtb3ZlPyhkYXRhLCAuLi5hcmd2KTogdGhpc1xuXHRwcm90ZWN0ZWQgX3JlbW92ZT8oZGF0YSwgLi4uYXJndilcblxuXHRwdWJsaWMganNvbj8oLi4uYXJndik6IElESUNUPFQ+XG5cdHB1YmxpYyBzdHJpbmdpZnk/KC4uLmFyZ3YpOiBzdHJpbmdcblxuXHRwdWJsaWMgc2l6ZSgpOiBudW1iZXJcblx0e1xuXHRcdHJldHVybiBPYmplY3Qua2V5cyh0aGlzLlRBQkxFKS5sZW5ndGg7XG5cdH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQWJzdHJhY3RUYWJsZURpY3RDb3JlO1xuIl19